// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// schema.prisma

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  refresh_token_expires_in Int?
  user                     User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String      @id @default(cuid())
  name              String?
  email             String?     @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  sessions          Session[]
  Review            Review[]
  likes             Like[]
  likedEscapeThemes ThemeLike[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Cafe {
  id          String        @id @default(cuid())
  name        String
  city        String
  area        String        @default("없음")
  street      String        @default("없음")
  phoneNumber String
  website     String
  rating      Float
  themeList   EscapeTheme[]
}

model EscapeTheme {
  name           String
  cafe           Cafe        @relation(fields: [cafeId], references: [id])
  rating         Float
  timeLimitation Int         @default(60)
  description    String?
  id             String      @id @default(cuid())
  imageURL       String      @default("https://images.unsplash.com/photo-1600000000000-000000000000?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80")
  cost           Int         @default(22000)
  cafeId         String
  reviewList     Review[]
  likes          ThemeLike[]
}

model Review {
  id            String      @id @default(cuid())
  escapeThemeId String
  escapeTheme   EscapeTheme @relation(fields: [escapeThemeId], references: [id])
  userId        String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  rating        Float?
  review        String?
  createdAt     DateTime?   @default(now())
  likeCount     Int?        @default(0)
  likes         Like[]

  @@unique([escapeThemeId, userId])
}

model Like {
  id        String   @id @default(cuid())
  reviewId  String
  review    Review   @relation(fields: [reviewId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model ThemeLike {
  themeId   String
  theme     EscapeTheme @relation(fields: [themeId], references: [id])
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())

  @@id([themeId, userId])
}
